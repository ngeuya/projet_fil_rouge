---
- name: Mettre à jour l'application dans Kubernetes
  hosts: localhost
  become: yes
  become_method: sudo
  become_user: t-sim
  tasks:
    - name: Démarrer Docker
      shell: |
        if ! pgrep -x "dockerd" > /dev/null
        then
          sudo open -a Docker
          while ! docker info > /dev/null 2>&1; do
            echo "Waiting for Docker to start..."
            sleep 2
          done
        fi

    - name: Vérifier que Docker est en cours d'exécution
      shell: docker info
      register: docker_info
      changed_when: false

    - name: Afficher l'information Docker
      debug:
        var: docker_info.stdout

    # - name: Démarrer Minikube
    #   shell: minikube start
    #   register: minikube_start
    #   changed_when: false

    # - name: Afficher le résultat du démarrage de Minikube
    #   debug:
    #     var: minikube_start.stdout

    - name: Appliquer la nouvelle configuration de déploiement web
      command: kubectl apply -f ../kubernetes/web-deployment.yml
      register: web_deploy
      changed_when: "'configured' in web_deploy.stdout"

    - name: Appliquer la nouvelle configuration de service web
      command: kubectl apply -f ../kubernetes/web-service.yml
      register: web_service
      changed_when: "'configured' in web_service.stdout"

    - name: Appliquer la nouvelle configuration de déploiement db
      command: kubectl apply -f ../kubernetes/db-deployment.yml
      register: db_deploy
      changed_when: "'configured' in db_deploy.stdout"

    - name: Appliquer la nouvelle configuration de service db
      command: kubectl apply -f ../kubernetes/db-service.yml
      register: db_service
      changed_when: "'configured' in db_service.stdout"

    # - name: Vérifier le statut du déploiement web
    #   command: kubectl rollout status deployment/web-deployment
    #   register: rollout_web_status
    #   retries: 5
    #   delay: 10
    #   until: rollout_web_status.rc == 0

    # - name: Vérifier le statut du déploiement db
    #   command: kubectl rollout status deployment/db-deployment
    #   register: rollout_db_status
    #   retries: 5
    #   delay: 10
    #   until: rollout_db_status.rc == 0

    # - name: Rollback en cas d'échec du déploiement web
    #   command: kubectl rollout undo deployment/web-deployment
    #   when: rollout_web_status.rc != 0

    # - name: Rollback en cas d'échec du déploiement db
    #   command: kubectl rollout undo deployment/db-deployment
    #   when: rollout_db_status.rc != 0
